on: [ push ]
jobs:

  deliver_npm:
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout from GitHub
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Publish npm package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  test_npx:
    needs: deliver_npm
    runs-on: ubuntu-20.04
    steps:

      - name: Start MongoDB
        run: docker run --publish "27017:27017" --detach mongo

      - name: Start server
        run: npx wavdio-express@3.0.1-test-9 &

      - name: Wait for server
        uses: cygnetdigital/wait_for_response@v2.0.0
        with:
          url: 'http://localhost:3000/'

  deliver_docker:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: keepinmindbot
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            keepinmindbot/wavdio-express:latest
            keepinmindbot/wavdio-express:3
            keepinmindbot/wavdio-express:3.0
            keepinmindbot/wavdio-express:3.0.1-test-9

  test_docker:
    needs: deliver_docker
    runs-on: ubuntu-20.04
    steps:

      - name: Start MongoDB and server
        run: |
          docker network create wavdio-net
          docker run --network wavdio-net --publish "27017:27017" --detach mongo
          docker run --network wavdio-net --publish "3000:3000" --detach keepinmindbot/wavdio-express:3.0.1-test-9

      - name: Wait for server
        uses: cygnetdigital/wait_for_response@v2.0.0
        with:
          url: 'http://localhost:3000/'

  test_docker_compose:
    needs: deliver_docker
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout from GitHub
        uses: actions/checkout@v2

      - name: Start MongoDB and server
        run: docker-compose up

      - name: Wait for server
        uses: cygnetdigital/wait_for_response@v2.0.0
        with:
          url: 'http://localhost:3000/'
